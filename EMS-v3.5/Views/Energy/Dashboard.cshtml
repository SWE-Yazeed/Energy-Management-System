@model IEnumerable<EMS_v2._2.Models.EnergyConsumption>
@using Newtonsoft.Json

<link rel="stylesheet" href="~/css/dashboard.css" />

<div class="dashboard-header-buttons">
    <!-- Account management button -->
    <button class="manage-account-btn" onclick="location.href='@Url.Action("ManageAccount", "Account")'">
        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="white" class="bi bi-person-gear" viewBox="0 0 16 16">
            <path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m.256 7a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1zm3.63-4.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382zM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0" />
        </svg>
    </button>

    <!-- Logout button -->
    <button class="logout-btn" onclick="location.href='@Url.Action("Logout", "Account")'">
        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="white" class="bi bi-box-arrow-right" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z" />
            <path fill-rule="evenodd" d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z" />
        </svg>
    </button>
</div>

    <div class="dashboard-container">
    <h1 style="text-align: center; font-weight: bold;">Energy Dashboard</h1>

        <!-- Charts Section -->
        <div class="chart-section">
            <div class="chart-wrapper">
                <canvas id="consumptionBarChart"></canvas>
            </div>
            <div class="chart-wrapper chart-pie-wrapper">
                <canvas id="consumptionPieChart"></canvas>
            </div>
        </div>

    <!-- Energy Consumption Records -->
    <div class="table-section mt-4">
        <h3 class="text-center" style="text-align: center; margin-bottom: 20px;">Energy Consumption Records</h3>
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive mx-auto">
                <table class="energy-table table-sm">
                    <thead>
                        <tr>
                            <th style="width: 8%;">Date</th>
                            <th style="width: 7%;">KWh</th>
                            <th style="width: 10%;">Location</th>
                            <th style="width: 10%;">Building Type</th>
                            <th style="width: 10%;">Consumption Level</th>

                            <!-- Conditionally show columns based on BuildingType -->
                            @if (Model.Any(m => m.BuildingType == "Industrial"))
                            {
                                <th style="width: 7%;">Machine Count</th>
                            }
                            else
                            {
                                <th style="width: 7%;">Room Count</th>
                                <th style="width: 7%;">Person Count</th>
                                <th style="width: 7%;">Appliance Count</th>
                            }

                            <th style="width: 10%;">Options</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            bool isHighConsumption = item?.IsHighConsumption ?? false;
                            string icon = isHighConsumption ? "&#9888; High Consumption" : "&#x1F331; Normal Consumption";
                            string rowClass = isHighConsumption ? "table-danger" : "table-success";

                            <tr class="@rowClass">
                                <td>@(item?.Date.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                <td>@(item?.EnergyUsed?.ToString("F2") ?? "N/A")</td>
                                <td>@(item?.Location ?? "N/A")</td>
                                <td>@(item?.BuildingType ?? "N/A")</td>
                                <td class="consumption-level">
                                    <span class="@(isHighConsumption ? "high-consumption-icon" : "low-consumption-icon")">
                                        @Html.Raw(icon)
                                    </span>
                                </td>

                                <!-- Conditionally show data based on BuildingType -->
                                @if (item?.BuildingType == "Industrial")
                                {
                                    <td>@(item?.MachineCount?.ToString() ?? "N/A")</td>
                                }
                                else
                                {
                                    <td>@(item?.RoomCount?.ToString() ?? "N/A")</td>
                                    <td>@(item?.PersonCount?.ToString() ?? "N/A")</td>
                                    <td>@(item?.ApplianceCount?.ToString() ?? "N/A")</td>
                                }

                                <td>
                                    <a href="@Url.Action("EditConsumption", "Energy", new { id = item?.Id })" class="btn btn-secondary btn-sm">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p>No consumption records available.</p>
        }
    </div>

        </div>
        <!-- Add New Button -->
        <div class="add-consumption-section text-center mt-3">
            <a href="@Url.Action("AddConsumption", "Energy")" class="btn btn-add">
                <i class="fas fa-plus-circle"></i> Add New
            </a>
        </div>

        <!-- Statistics Section -->
        <div class="stats-section mt-4">
            <div class="stat-box">
                <h3>Predicted Future Energy Consumption</h3>
                <p style="text-align: center; direction: ltr;"><em>Note: Prediction accuracy improves with more records per location.</em></p>
                @if (ViewData["PredictionsByLocation"] is List<dynamic> predictions && predictions.Any())
                {
                    <table class="energy-table">
                        <thead>
                            <tr>
                                <th>Location</th>
                                <th>Record Count</th>
                                <th>Predicted Usage (KWh)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var prediction in predictions)
                            {
                                <tr>
                                    <td>@(prediction.Location ?? "N/A")</td>
                                    <td>@(prediction.RecordCount ?? "N/A")</td>
                                    <td>@(prediction.PredictedUsage?.ToString("F2") ?? "N/A")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>No prediction data available.</p>
                }
            </div>
        </div>

        <!-- Technical Recommendations Section -->
        <div class="tech-recommendations-section mt-4 text-center">
            <h3 class="section-title">Tech Recommendations</h3>
            <p style="text-align: left; direction: ltr;">
                @(ViewBag.TechRecommendations ?? "No recommendations available.")
            </p>
        </div>
    </div>

    <!-- Include Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var consumptionData = @Html.Raw(JsonConvert.SerializeObject(Model?.Select(e => (double)(e.EnergyUsed ?? 0)).ToList() ?? new List<double>()));
        var consumptionLabels = @Html.Raw(JsonConvert.SerializeObject(Model?.Select(e => e.Date.ToString("yyyy-MM-dd")).ToList() ?? new List<string>()));

        // Bar Chart
        var ctxBar = document.getElementById('consumptionBarChart').getContext('2d');
        new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: consumptionLabels,
                datasets: [{
                    label: 'Energy Consumption (KWh)',
                    data: consumptionData,
                    backgroundColor: 'rgba(75, 192, 192, 0.6)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'KWh'
                        }
                    }
                }
            }
        });

        // Pie Chart
        var ctxPie = document.getElementById('consumptionPieChart').getContext('2d');
        new Chart(ctxPie, {
            type: 'pie',
            data: {
                labels: ['Rooms', 'Persons', 'Appliances', 'Machines'],
                datasets: [{
                    data: [
        @Model?.Sum(e => e.RoomCount ?? 0) ?? 0,
        @Model?.Sum(e => e.PersonCount ?? 0) ?? 0,
        @Model?.Sum(e => e.ApplianceCount ?? 0) ?? 0,
        @Model?.Sum(e => e.MachineCount ?? 0) ?? 0
                    ],
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    </script>
